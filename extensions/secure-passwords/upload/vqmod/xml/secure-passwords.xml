<!--
Copyright 2012 CGSmith.net, LLC (http://www.cgsmith.net/)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<modification>
	<id><![CDATA[Secure Password]]></id>
	<version><![CDATA[1.20.154]]></version>
	<vqmver><![CDATA[1.00]]></vqmver>
	<author><![CDATA[CGSmith.net, LLC - http://www.cgsmith.net/]]></author>
<!-- CONFIRM PASSWORD ADDITION 
	<file name="catalog/view/theme/default/template/account/password.tpl">
		<operation>
			<search position="after"><![CDATA[<table class="form">]]></search>
			<add><![CDATA[<tr>
          <td><span class="required">*</span> Old Password: </td>
          <td><input type="password" name="oldpassword" value="" /></td>
        </tr>]]>
			</add>
			</operation>
	</file>-->
<!-- USER ADMIN LOGIN MODS -->
	<file name="system/library/user.php">
		<operation>
			<search position="replace"><![CDATA[ AND (password = SHA1(CONCAT(salt, SHA1(CONCAT(salt, SHA1('" . $this->db->escape($password) . "'))))) OR password = '" . $this->db->escape(md5($password)) . "')]]></search>
			<add><![CDATA[ ]]></add>
		</operation>
		<operation>
			<search position="after" offset="7"><![CDATA[public function login($username, $password) {]]></search>
			<add><![CDATA[$this->password	= $user_query->row['password']; //256 characters
			if (strlen($this->password) > 40){
				$is_correct = Bcrypt::check($password, $this->password);
			}else{
				if ((sha1($user_query->row['salt'].sha1($user_query->row['salt'].sha1($password)))) === $this->password) {
					$is_correct = TRUE;
				}
				if ($is_correct) {
					$this->storeNewHash(Bcrypt::hash($password));
				}
			}
			if (!$is_correct){
				return false;
			}]]></add>
		</operation>
		<operation>
			<search position="after" offset="1"><![CDATA[return $this->username;]]></search>
			<add><![CDATA[private function storeNewHash($hash) {
			$hash_query = $this->db->query("UPDATE " . DB_PREFIX . "user SET `password` = '" . $hash . "' WHERE `user_id` = '". $this->user_id ."'");
			return;
			}]]></add>
		</operation>
	</file>
	<file name="system/startup.php">
		<operation>
			<search position="after"><![CDATA[// Common]]></search>
			<add><![CDATA[require_once(DIR_SYSTEM . 'library/bcrypt.php');]]></add>
		</operation>
	</file>
	<file name="admin/model/user/user.php">
		<operation>
			<search position="replace"><![CDATA[salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "']]></search>
			<add><![CDATA[salt = '', password = '" .Bcrypt::hash($data['password']). "']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($password)))) . "']]></search>
			<add><![CDATA[salt = '', password = '". Bcrypt::hash($data['password']) . "']]></add>
		</operation>
	</file>
	<!-- CUSTOMER ADMIN LOGIN MODS -->
	<file name="admin/model/sale/customer.php">
		<operation>
			<search position="replace"><![CDATA[salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "',]]></search>			
			<add><![CDATA[salt = '', password = ' ".Bcrypt::hash($data['password']) . "',]]></add>
		</operation>
	</file>
<!-- CUSTOMER CATALOG LOGIN MODS -->
	<file name="catalog/model/account/customer.php">
		<operation>
			<search position="replace"><![CDATA[salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "',]]></search>
			<add><![CDATA[salt = '', password ='" .Bcrypt::hash($data['password']). "', ]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($password)))) . "']]></search>
			<add><![CDATA[salt = '', password = '" .Bcrypt::hash($password). "']]></add>
		</operation>
	</file>
	<file name="system/library/customer.php">
		<operation>
			<search position="replace"><![CDATA[$override = false]]></search>			
			<add><![CDATA[$override = true]]></add>
		</operation>
		<operation>
			<search position="after" offset="6"><![CDATA[public function login(]]></search>
			<add><![CDATA[$this->password	= $customer_query->row['password']; //256 characters
			$this->customer_id = $customer_query->row['customer_id'];
			if (strlen($this->password) > 40){
				$is_correct = Bcrypt::check($password, $this->password);
			}else{
				if ((sha1($user_query->row['salt'].sha1($user_query->row['salt'].sha1($password)))) === $this->password) {
					$is_correct = TRUE;
				}
				if ($is_correct) {
					$this->storeNewHash(Bcrypt::hash($password));
				}
			}
			if (!$is_correct){
				return false;
			}]]></add>
		</operation>
		<operation>
			<search position="after" offset="1"><![CDATA[return $this->address_id;]]></search>
			<add><![CDATA[private function storeNewHash($hash) {
			$hash_query = $this->db->query("UPDATE " . DB_PREFIX . "customer SET `password` = '" . $hash . "' WHERE `customer_id` = '". $this->customer_id ."'");
			return;
			}]]></add>
		</operation>
	</file>
	

</modification> 